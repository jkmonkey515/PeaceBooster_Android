// Generated by view binder compiler. Do not edit!
package com.alek.peacebooster.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.alek.peacebooster.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogScannerBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final FrameLayout frameLoading;

  @NonNull
  public final ImageView imvSource;

  @NonNull
  public final View left;

  @NonNull
  public final RelativeLayout myRelativeLayout;

  @NonNull
  public final View right;

  @NonNull
  public final View scannerBarView;

  @NonNull
  public final LinearLayout scannerLayout;

  @NonNull
  public final TextView txvTitle;

  private DialogScannerBinding(@NonNull LinearLayout rootView, @NonNull FrameLayout frameLoading,
      @NonNull ImageView imvSource, @NonNull View left, @NonNull RelativeLayout myRelativeLayout,
      @NonNull View right, @NonNull View scannerBarView, @NonNull LinearLayout scannerLayout,
      @NonNull TextView txvTitle) {
    this.rootView = rootView;
    this.frameLoading = frameLoading;
    this.imvSource = imvSource;
    this.left = left;
    this.myRelativeLayout = myRelativeLayout;
    this.right = right;
    this.scannerBarView = scannerBarView;
    this.scannerLayout = scannerLayout;
    this.txvTitle = txvTitle;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogScannerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogScannerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_scanner, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogScannerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.frame_loading;
      FrameLayout frameLoading = ViewBindings.findChildViewById(rootView, id);
      if (frameLoading == null) {
        break missingId;
      }

      id = R.id.imvSource;
      ImageView imvSource = ViewBindings.findChildViewById(rootView, id);
      if (imvSource == null) {
        break missingId;
      }

      id = R.id.left;
      View left = ViewBindings.findChildViewById(rootView, id);
      if (left == null) {
        break missingId;
      }

      id = R.id.myRelativeLayout;
      RelativeLayout myRelativeLayout = ViewBindings.findChildViewById(rootView, id);
      if (myRelativeLayout == null) {
        break missingId;
      }

      id = R.id.right;
      View right = ViewBindings.findChildViewById(rootView, id);
      if (right == null) {
        break missingId;
      }

      id = R.id.scannerBarView;
      View scannerBarView = ViewBindings.findChildViewById(rootView, id);
      if (scannerBarView == null) {
        break missingId;
      }

      id = R.id.scannerLayout;
      LinearLayout scannerLayout = ViewBindings.findChildViewById(rootView, id);
      if (scannerLayout == null) {
        break missingId;
      }

      id = R.id.txv_title;
      TextView txvTitle = ViewBindings.findChildViewById(rootView, id);
      if (txvTitle == null) {
        break missingId;
      }

      return new DialogScannerBinding((LinearLayout) rootView, frameLoading, imvSource, left,
          myRelativeLayout, right, scannerBarView, scannerLayout, txvTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
