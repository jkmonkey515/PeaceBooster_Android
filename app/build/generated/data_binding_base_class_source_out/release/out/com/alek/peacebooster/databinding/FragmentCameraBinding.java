// Generated by view binder compiler. Do not edit!
package com.alek.peacebooster.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.alek.peacebooster.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentCameraBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppCompatButton btnRetakePhoto;

  @NonNull
  public final AppCompatButton btnStart;

  @NonNull
  public final AppCompatButton btnTakePhoto;

  @NonNull
  public final ImageView imvBuildingImg;

  @NonNull
  public final RelativeLayout lyImageSet;

  @NonNull
  public final FrameLayout lyTakePhoto;

  @NonNull
  public final TextView showOfficial;

  private FragmentCameraBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppCompatButton btnRetakePhoto, @NonNull AppCompatButton btnStart,
      @NonNull AppCompatButton btnTakePhoto, @NonNull ImageView imvBuildingImg,
      @NonNull RelativeLayout lyImageSet, @NonNull FrameLayout lyTakePhoto,
      @NonNull TextView showOfficial) {
    this.rootView = rootView;
    this.btnRetakePhoto = btnRetakePhoto;
    this.btnStart = btnStart;
    this.btnTakePhoto = btnTakePhoto;
    this.imvBuildingImg = imvBuildingImg;
    this.lyImageSet = lyImageSet;
    this.lyTakePhoto = lyTakePhoto;
    this.showOfficial = showOfficial;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentCameraBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentCameraBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_camera, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentCameraBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnRetakePhoto;
      AppCompatButton btnRetakePhoto = ViewBindings.findChildViewById(rootView, id);
      if (btnRetakePhoto == null) {
        break missingId;
      }

      id = R.id.btnStart;
      AppCompatButton btnStart = ViewBindings.findChildViewById(rootView, id);
      if (btnStart == null) {
        break missingId;
      }

      id = R.id.btnTakePhoto;
      AppCompatButton btnTakePhoto = ViewBindings.findChildViewById(rootView, id);
      if (btnTakePhoto == null) {
        break missingId;
      }

      id = R.id.imvBuildingImg;
      ImageView imvBuildingImg = ViewBindings.findChildViewById(rootView, id);
      if (imvBuildingImg == null) {
        break missingId;
      }

      id = R.id.lyImageSet;
      RelativeLayout lyImageSet = ViewBindings.findChildViewById(rootView, id);
      if (lyImageSet == null) {
        break missingId;
      }

      id = R.id.lyTakePhoto;
      FrameLayout lyTakePhoto = ViewBindings.findChildViewById(rootView, id);
      if (lyTakePhoto == null) {
        break missingId;
      }

      id = R.id.showOfficial;
      TextView showOfficial = ViewBindings.findChildViewById(rootView, id);
      if (showOfficial == null) {
        break missingId;
      }

      return new FragmentCameraBinding((ConstraintLayout) rootView, btnRetakePhoto, btnStart,
          btnTakePhoto, imvBuildingImg, lyImageSet, lyTakePhoto, showOfficial);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
